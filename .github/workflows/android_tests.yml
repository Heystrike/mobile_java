name: Android Mobile Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  android-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    if: ${{ !cancelled() }}
    
    strategy:
      matrix:
        api-level: [29]
        target: [default]
        arch: [x86_64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Enable KVM group perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
        
    - name: Cache Android SDK
      uses: actions/cache@v4
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
          ~/.android/sdk
        key: ${{ runner.os }}-android-${{ matrix.api-level }}
        restore-keys: |
          ${{ runner.os }}-android-
          
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install Android SDK components
      if: ${{ !cancelled() }}
      run: |
        sdkmanager "system-images;android-${{ matrix.api-level }};${{ matrix.target }};${{ matrix.arch }}"
        sdkmanager "platforms;android-${{ matrix.api-level }}"
        sdkmanager "build-tools;30.0.3"
        sdkmanager "platform-tools"
        sdkmanager "emulator"
        
    - name: Create AVD
      if: ${{ !cancelled() }}
      run: |
        echo "no" | avdmanager create avd --force --name test_emulator --abi ${{ matrix.target }}/${{ matrix.arch }} --package "system-images;android-${{ matrix.api-level }};${{ matrix.target }};${{ matrix.arch }}"
        
    - name: Start Android Emulator
      if: ${{ !cancelled() }}
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: ${{ matrix.arch }}
        profile: Nexus 6
        cores: 2
        ram-size: 4096M
        heap-size: 1024M
        sdcard-path-or-size: 512M
        avd-name: test_emulator
        force-avd-creation: false
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          echo "Emulator started successfully"
          adb devices
          adb shell input keyevent 82
          
    - name: Wait for emulator to be ready
      if: ${{ !cancelled() }}
      run: |
        echo "Waiting for emulator to be ready..."
        adb wait-for-device
        until adb shell getprop init.svc.bootanim | grep -m 1 stopped; do
          echo "Still waiting for emulator..."
          sleep 5
        done
        echo "Emulator is ready!"
        adb devices -l
        
    - name: Install Appium Server
      if: ${{ !cancelled() }}
      run: |
        npm install -g appium@2.0.0
        appium driver install uiautomator2
        appium driver list
        
    - name: Start Appium Server
      if: ${{ !cancelled() }}
      run: |
        appium --port 4723 --log-level info --log appium.log &
        sleep 10
        echo "Appium server started"
        
    - name: Verify Maven installation
      if: ${{ !cancelled() }}
      run: mvn --version
      
    - name: Compile test classes
      if: ${{ !cancelled() }}
      run: mvn clean compile test-compile
      
    - name: Run Android Tests
      if: ${{ !cancelled() }}
      run: |
        mvn test -Pandroid \
          -Dplatform=android \
          -Dmodule=contatos \
          -Dsuite=suites/contatos/android-contatos-suite.xml \
          -DfailIfNoTests=false
      env:
        ANDROID_HOME: ${{ env.ANDROID_HOME }}
        
    - name: Generate Test Report
      if: ${{ !cancelled() && always() }}
      run: |
        if [ -d "target/surefire-reports" ]; then
          echo "Test reports found:"
          ls -la target/surefire-reports/
        else
          echo "No test reports found"
        fi
        
    - name: Upload Test Results
      if: ${{ !cancelled() && always() }}
      uses: actions/upload-artifact@v4
      with:
        name: android-test-results-${{ matrix.api-level }}
        path: |
          target/surefire-reports/
          appium.log
          target/test-classes/
        retention-days: 30
        
    - name: Upload Test Reports
      if: ${{ !cancelled() && always() }}
      uses: dorny/test-reporter@v1
      with:
        name: Android Tests Results
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: false
        
    - name: Stop Appium Server
      if: ${{ !cancelled() && always() }}
      run: |
        pkill -f appium || true
        
    - name: Collect Logs
      if: ${{ !cancelled() && failure() }}
      run: |
        echo "=== ADB Devices ==="
        adb devices -l
        echo "=== Emulator Logs ==="
        adb logcat -d | tail -100
        echo "=== Appium Logs ==="
        if [ -f appium.log ]; then
          cat appium.log
        fi

  notification:
    needs: android-tests
    runs-on: ubuntu-latest
    if: ${{ !cancelled() && always() }}
    
    steps:
    - name: Test Status Notification
      run: |
        if [ "${{ needs.android-tests.result }}" == "success" ]; then
          echo "✅ Android tests passed successfully!"
        else
          echo "❌ Android tests failed or were cancelled"
          exit 1
        fi
